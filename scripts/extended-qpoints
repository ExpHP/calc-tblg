#!/usr/bin/env python3

import numpy as np
import json
import os

def main():
	import argparse
	parser = argparse.ArgumentParser(description="")
	parser.add_argument('POSITIONS', type=str, help='path to positions.json')
	parser.add_argument('CONFIG', type=str, help='path to config.json (will be modified)')
	parser.add_argument('PATH', type=str, help='a colon-separated set of components "moire", "A", "B" naming high-symmetry paths')
	args = parser.parse_args()

	qpoint = {
		'moire': {
			"Γ": [  0,   0],
			"K": [1/3, 1/3],
			"M": [1/2,   0],
		},
	}

	meta = json.load(open(args.POSITIONS))['meta']
	CT = np.transpose(meta['C'])
	DT = np.transpose(meta['D'])
	qpoint["A"] = {k:(CT @ v).tolist() for (k,v) in qpoint['moire'].items()}
	qpoint["B"] = {k:(DT @ v).tolist() for (k,v) in qpoint['moire'].items()}
	qpoint = {k:{k:[k]+list(v)+[0] for (k,v) in v.items()} for (k,v) in qpoint.items()}

	path = [qpoint['moire']['Γ']]
	for p in args.PATH.split(':'):
		for k in ['K', 'M', 'Γ']:
			path.append(qpoint[p][k])

	with open(args.CONFIG) as f:
		d = json.load(f)
	d['phonopy']['qpoints'] = path

	s = json.dumps(d)
	os.rename(args.CONFIG, args.CONFIG + '.bak')
	with open(args.CONFIG, 'w') as f:
		print(s, file=f)

main()
