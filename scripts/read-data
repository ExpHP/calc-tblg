#!/usr/bin/env python3
import numpy as np

def main():
	import argparse
	import json
	parser = argparse.ArgumentParser()
	parser.add_argument('DATA')

	group = parser.add_mutually_exclusive_group(required=True)
	group.add_argument('--omega', action='store_true',
		help="get a json triply-nested array of all frequencies, "
		" indexed by symmetry line, then kpoint index, then band index")
	group.add_argument('-x', action='store_true',
		help="get a json doubly-nested array of the kpoint 'x'-axis plot positions, "
		" indexed by symmetry line, then kpoint index")
	group.add_argument('--kpoint', '-k', type=str.upper, choices='GAMMA M K Γ'.split(),
		help=" get the frequencies at a reciprocal space point")

	args = parser.parse_args()

	# [band][hsymline][kpt][xy]
	data = json.load(open(args.DATA))
	# [xy][band][hsymline][kpt]
	data = np.moveaxis(data, -1, 0)
	# [xy][hsymline][kpt][band]
	data = np.moveaxis(data, 1, -1)
	# [hsymline][kpt][band]
	omega = data[1]
	# [hsymline][kpt]
	xvals = data[0,:,:,0]

	if args.omega:
		print(omega.tolist())

	elif args.x:
		print(xvals.tolist())

	elif args.kpoint:
		ΓM,MK,KΓ = omega
		Γ,M,K = [x[0,:] for x in omega]

		if args.kpoint:
			values = {
				'GAMMA': Γ,
				'Γ': Γ, 'M': M, 'K': K,
			}[args.kpoint]
			for x in values:
				print(x)

	else: assert False

main()
